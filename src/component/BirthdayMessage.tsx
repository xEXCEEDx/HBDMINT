import React, { useState, useEffect, useRef } from "react";
import "./css/BirthdayMessage.css"; // For CSS animation
import "./css/Gift.css";

const messages = [
  "‡∏õ‡∏µ‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏¢‡∏∏ 23 ‡πÅ‡∏•‡πâ‡∏ß ‡πÇ‡∏ï‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡∏ô‡∏∞",
  "‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏µ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
  "‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏°‡∏µ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏≤‡∏ö‡∏£‡∏∑‡πà‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡∏ô‡∏∞‡∏Ñ‡∏∞",
  "‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡πÅ‡∏•‡∏∞‡∏™‡∏î‡πÉ‡∏™‡πÑ‡∏õ‡∏ï‡∏•‡∏≠‡∏î",
  "‡πÅ‡∏•‡∏∞‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏î‡∏µ‡∏Å‡πá‡πÉ‡∏´‡πâ‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡∏ô‡∏∞ ‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏Å‡πá‡πÄ‡∏Å‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß",
  "‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏Å‡πá‡∏¢‡∏¥‡πâ‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏¢‡∏≠‡∏∞‡πÜ  ï·µî·¥•·µî î",
  "‡πÅ‡∏•‡∏∞‡∏Å‡πá‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏á‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏î‡∏µ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏á‡∏ß‡∏•‡∏ô‡∏∞",
  "‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡πÜ ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏à‡∏∞‡∏ó‡∏≥‡∏ô‡∏∞‡∏Ñ‡∏∞‚òÉÔ∏è‚ùÑÔ∏èüéÑüéÅ",
  "‡∏î‡∏µ‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ",
  "‡∏ñ‡∏∂‡∏á‡πÅ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢ ‡πÅ‡∏ï‡πà‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ô‡∏∞",
  "‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡πÜ‡πÄ‡∏ò‡∏≠‡∏ï‡∏•‡∏≠‡∏î‡∏ô‡∏∞ ",
  "‡πÄ‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÉ‡∏´‡πâ‡πÄ‡∏ò‡∏≠‡πÄ‡∏™‡∏°‡∏≠ üíñ",
  "‚ô°‡πÅ‡∏Æ‡∏õ‡∏õ‡∏µ‡πâ‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏î‡πÄ‡∏î‡∏¢‡πå‡∏ô‡∏∞‡∏Ñ‡∏∞‚ô°"
];

const AnimatedBirthdayMessage: React.FC = () => {
  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);
  const [showCountdown, setShowCountdown] = useState(false);
  const [countdown, setCountdown] = useState(3);
  const [showVideo, setShowVideo] = useState(false);
  const [showGif, setShowGif] = useState(false);
  const [showMessage, setShowMessage] = useState(false);
  const [showGiftBox, setShowGiftBox] = useState(true);

  const audioRef = useRef<HTMLAudioElement | null>(null);

  const handleOpenGift = () => {
    setShowGiftBox(false); // ‡∏ã‡πà‡∏≠‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î
    setShowGif(true);
    const gifTimeout = setTimeout(() => {
      setShowGif(false);
      setShowMessage(true); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å GIF ‡∏´‡∏°‡∏î
    }, 5000); // ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á GIF

    return () => clearTimeout(gifTimeout);
  };

  useEffect(() => {
    if (showMessage) {
      if (currentMessageIndex < messages.length) {
        const timeout = setTimeout(() => {
          setCurrentMessageIndex((prevIndex) => prevIndex + 1);
        }, 4000); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏∏‡∏Å 4 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

        return () => clearTimeout(timeout);
      } else {
        setShowCountdown(true);
      }
    }
  }, [currentMessageIndex, showMessage]);

  useEffect(() => {
    if (showCountdown && countdown > 0) {
      const interval = setInterval(() => {
        setCountdown((prev) => prev - 1);
      }, 1000); // ‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

      return () => clearInterval(interval);
    } else if (countdown === 0) {
      setShowVideo(true);
    }
  }, [showCountdown, countdown]);

  useEffect(() => {
    if (audioRef.current) {
      audioRef.current.volume = 0.08; // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 20%
      audioRef.current.loop = true; // ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏ô loop
      audioRef.current.play();
    }
  }, []);

  return (
    <>
      <audio ref={audioRef} autoPlay loop>
        <source src="/audio/blue.mp3" type="audio/mpeg" />
        Your browser does not support the audio element.
      </audio>
      <div className="background-decoration">
        <img src="/photo/catsleep.png" alt="Cat Sleep" className="cat1" />
        <img src="/photo/catsleep2.png" alt="Cat Sleep 2" className="cat2" />
        <img src="/photo/chicat.png" alt="Chicat" className="cat3" />
        <img src="/photo/catsnow.png" alt="snow" className="catsnow" />
      </div>
      <div className="gift-box">
        {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç */}
        {showGiftBox && (
          <img
            src="giftt.png"
            alt="Gift Box"
            className={`gift-image ${!showGiftBox ? "hidden" : ""}`}
            onClick={handleOpenGift} />
        )}

        {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡πÅ‡∏ö‡∏ö‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡πà‡∏ô */}
        {showGif && (
          <img
            src="gift.gif"
            alt="Opening Gift"
            className="gif-animation"
            onLoad={() => console.log("GIF loaded")} />
        )}

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ */}
        <div className="animated-birthday-container">
          {showMessage && !showCountdown && !showVideo && (
            <div className="message">{messages[currentMessageIndex]}</div>
          )}

          {showCountdown && !showVideo && (
            <div className="countdown">{countdown}</div>
          )}

          {showVideo && (
           <video
           controls
           className="gift-video"
           onEnded={() => console.log("Video ended")}
           onPlay={() => {
             if (audioRef.current) {
               audioRef.current.pause(); // ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô
             }
           }}
         >
           <source src="/audio/LOVE.mp4" type="video/mp4" />
           Your browser does not support the video tag.
         </video>
         
          )}
        </div>
      </div>
    </>
  );
};

export default AnimatedBirthdayMessage;
