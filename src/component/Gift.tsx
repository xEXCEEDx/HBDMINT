import React, { useState, useEffect } from "react";
import "./Gift.css";

interface GiftBoxProps {
  onClose: () => void;
}

const GiftBox: React.FC<GiftBoxProps> = ({ onClose }) => {
  const [showGif, setShowGif] = useState(false);
  const [showVideo, setShowVideo] = useState(false);
  const [showMessage, setShowMessage] = useState(false);
  const [showButton, setShowButton] = useState(false);
  const [messageContent, setMessageContent] = useState<string[]>([]);
  const [messageLoaded, setMessageLoaded] = useState(false);

  const message = [
    "üéâ ‡πÅ‡∏Æ‡∏õ‡∏õ‡∏µ‡πâ‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏î‡πÄ‡∏î‡∏¢‡πå‡∏ô‡∏∞‡∏Ñ‡∏∞ üéâ",
    "üéâ ‡πÅ‡∏Æ‡∏õ‡∏õ‡∏µ‡πâ‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏î‡πÄ‡∏î‡∏¢‡πå‡∏ô‡∏∞‡∏Ñ‡∏∞ üéâ",
    "‡∏õ‡∏µ‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏¢‡∏∏ 23 ‡πÅ‡∏•‡πâ‡∏ß ‡πÇ‡∏ï‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢‡∏ô‡∏∞ ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏µ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏°‡∏µ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏≤‡∏ö‡∏£‡∏∑‡πà‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡πÅ‡∏•‡∏∞‡∏™‡∏î‡πÉ‡∏™‡πÑ‡∏õ‡∏ï‡∏•‡∏≠‡∏î  ‡πÅ‡∏•‡∏∞‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏î‡∏µ‡∏Å‡πá‡πÉ‡∏´‡πâ‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ ‡∏ô‡∏∞ ‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏Å‡πá‡πÄ‡∏Å‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏Å‡πá‡∏¢‡∏¥‡πâ‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏¢‡∏≠‡∏∞‡πÜ ‡πÅ‡∏•‡∏∞‡∏Å‡πá‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏á‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏î‡∏µ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡∏ô‡∏∞ ‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡πÜ ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏à‡∏∞‡∏ó‡∏≥‡∏ô‡∏∞‡∏Ñ‡∏∞‚òÉÔ∏è‚ùÑÔ∏èüéÑüéÅ",
    "‡∏î‡∏µ‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏ñ‡∏∂‡∏á‡πÅ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢ ‡πÅ‡∏ï‡πà‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ô‡∏∞ ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏°‡∏≠ üíñ",
  ];

  useEffect(() => {
    if (showMessage && !messageLoaded) {
      let index = 0;
      const interval = setInterval(() => {
        if (index < message.length) {
          setMessageContent((prev) => [...prev, message[index]]);
          index++;
        } else {
          clearInterval(interval);
          setMessageLoaded(true);
        }
      }, 1000);

      return () => clearInterval(interval);
    }
  }, [showMessage, messageLoaded]);

  const handleOpenGift = () => {
    setShowGif(true);
    const gifTimeout = setTimeout(() => {
      setShowGif(false);
      setShowVideo(true);
      setShowButton(true);
    }, 5000); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö GIF ‡∏à‡∏£‡∏¥‡∏á

    return () => clearTimeout(gifTimeout);
  };

  const toggleMessages = () => {
    setShowMessage((prev) => !prev);
    if (!showMessage) {
      setMessageContent([]);
      setMessageLoaded(false);
    }
  };

  return (
    <div className="gift-box">
      {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç */}
      {!showGif && !showVideo && (
        <img
          src="giftt.png"
          alt="Gift Box"
          className="gift-image"
          onClick={handleOpenGift}
        />
      )}

      {/* ‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πà‡∏≠‡∏á */}
      {showGif && (
        <img
          src="gift.gif"
          alt="Opening Gift"
          className="gif-animation"
          onLoad={() => console.log("GIF loaded")}
        />
      )}

      {/* ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */}
      {showButton && (
        <button className="toggle-button" onClick={toggleMessages}>
          {showMessage ? "‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‚ùÑÔ∏è" : "‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‚òÉÔ∏è"}
        </button>
      )}

      {/* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */}
      {showMessage && (
        <div className="gift-message-container">
          <div className="gift-message">
            {messageContent.map((msg, index) => (
              <p key={index} className="message-content show">
                {msg}
              </p>
            ))}
          </div>
          <img
            src="https://media.tenor.com/J6xumGwaxh8AAAAi/flowers-flower.gif"
            alt="Flower Animation"
          />
        </div>
      )}

      {/* ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ */}
      {showVideo && (
        <div className="video-container">
          <video
            controls
            className="gift-video"
            onEnded={() => console.log("Video ended")}
          >
            <source src="/audio/vdo.mp4" type="video/mp4" />
            Your browser does not support the video tag.
          </video>
        </div>
      )}
    </div>
  );
};

export default GiftBox;
