import React, { useState } from "react";
import { useNavigate } from "react-router-dom"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ useNavigate
import "./css/lock.css";
import CardText from "./CardText";
import GiftBox from "./Gift";

interface UnlockProps {
  onUnlock: () => void;
}

const UnlockComponent: React.FC<UnlockProps> = ({ onUnlock }) => {
  const [isUnlocked, setIsUnlocked] = useState(false);
  const [showQuestionContainer, setShowQuestionContainer] = useState(true);
  const [showGiftBox, setShowGiftBox] = useState(false);
  const [isButtonDisabled, setIsButtonDisabled] = useState(false);
  const [isButtonMoving, setIsButtonMoving] = useState(false);
  const [moveCount, setMoveCount] = useState(0);
  const [isButtonClicked, setIsButtonClicked] = useState(false);
  const [showStopButton, setShowStopButton] = useState(true);

  const navigate = useNavigate(); // ‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡∏Ç‡∏≠‡∏á useNavigate

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ AnimatedBirthdayMessage
  const handleViewMore = () => {
    setShowGiftBox(true);
    setShowQuestionContainer(false);
    navigate("/animated-birthday-message"); // ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
  };

  const handleStopMovingButton = () => {
    setIsButtonDisabled(true);
    setIsButtonMoving(true);
    setMoveCount((prevCount) => prevCount + 1);
    setIsButtonClicked(true);

    setTimeout(() => {
      setShowStopButton(false);
    }, 2000);
  };

  const randomMovement = () => {
    if (isButtonMoving) {
      const randomX = Math.floor(Math.random() * 200) - 100;
      const randomY = Math.floor(Math.random() * 200) - 100;
      return {
        transform: `translate(${randomX}px, ${randomY}px)`,
      };
    }
    return {};
  };

  return (
    <div className="card">
      <CardText
        title="Happy Birthday!"
        message="‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡πâ‡∏≤‡∏ó‡∏≥‡πÄ‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏ó‡∏≥‡∏°‡∏≤‡∏Å‡πÜ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ò‡∏≠‡πÄ‡∏•‡∏¢‡∏ô‡∏∞ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡πÄ‡∏ò‡∏≠‡πÄ‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏ò‡∏≠‡πÑ‡∏î‡πâ‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡πâ‡∏≤ ‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢ ‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏ò‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡πâ‡∏≤‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ô‡∏∞ ‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏ò‡∏≠‡∏à‡∏∞‡∏ä‡∏≠‡∏ö ‡∏à‡∏≥‡πÑ‡∏î‡πâ‡∏°‡∏±‡πâ‡∏¢‡∏ï‡∏≠‡∏ô‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏ä‡∏≠‡∏ö‡πÅ‡∏°‡∏ßüêà‚Äç‚¨õ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡πå‡∏°‡∏≤‡∏™‚òÉÔ∏è ‡πÄ‡∏ò‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡πå‡∏°‡∏≤‡∏™ ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏Å‡πá‡πÄ‡∏•‡∏¢‡πÄ‡∏≠‡∏≤‡∏´‡∏¥‡∏°‡∏∞‡∏°‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏ò‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ò‡∏µ‡∏°‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡πå‡∏°‡∏≤‡∏™ ‡πÄ‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÅ‡∏´‡∏•‡∏∞ üéÑ‚ùÑÔ∏è‚òÉÔ∏èü¶å"
      />

      {showQuestionContainer && (
        <div className="button-container">
          <div className="question-container">
            ‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏≠‡∏µ‡∏Å‡∏°‡∏±‡πâ‡∏¢ ?
          </div>

          <div className="button-group">
            <button
              className="continue-button"
              onClick={handleViewMore}
            >
              ‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å
            </button>
            {showStopButton && (
              <button
                className="stop-button"
                onClick={handleStopMovingButton}
                style={randomMovement()}
              >
                ‡∏û‡∏≠‡πÅ‡∏•‡πâ‡∏ß
              </button>
            )}
          </div>
        </div>
      )}
    </div>
  );
};

export default UnlockComponent;
